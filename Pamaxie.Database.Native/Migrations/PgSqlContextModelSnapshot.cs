// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Pamaxie.Database.Native;

#nullable disable

namespace Pamaxie.Database.Native.Migrations
{
    [DbContext(typeof(PgSqlContext))]
    partial class PgSqlContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Pamaxie.Database.Native.Sql.ApiKey", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("CredentialHash")
                        .HasColumnType("text")
                        .HasColumnName("credential_hash");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint")
                        .HasColumnName("project_id");

                    b.Property<DateTime?>("TTL")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ttl");

                    b.HasKey("Id")
                        .HasName("pk_api_keys");

                    b.HasIndex("ProjectId", "CredentialHash")
                        .HasDatabaseName("ix_api_keys_project_id_credential_hash");

                    b.ToTable("api_keys", (string)null);
                });

            modelBuilder.Entity("Pamaxie.Database.Native.Sql.EmailConfirmation", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("UserId"));

                    b.Property<string>("ConfirmationCode")
                        .HasColumnType("text")
                        .HasColumnName("confirmation_code");

                    b.HasKey("UserId")
                        .HasName("pk_email_confirmations");

                    b.ToTable("email_confirmations", (string)null);
                });

            modelBuilder.Entity("Pamaxie.Database.Native.Sql.KnownUserIp", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("IpAddress")
                        .HasColumnType("text")
                        .HasColumnName("ip_address");

                    b.Property<DateTime?>("TTL")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ttl");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_known_user_ips");

                    b.HasIndex("UserId", "IpAddress")
                        .HasDatabaseName("ix_known_user_ips_user_id_ip_address");

                    b.ToTable("known_user_ips", (string)null);
                });

            modelBuilder.Entity("Pamaxie.Database.Native.Sql.Project", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creation_date");

                    b.Property<long>("Flags")
                        .HasColumnType("bigint")
                        .HasColumnName("flags");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified");

                    b.Property<long>("LastModifiedUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("last_modified_user_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<long>("OwnerId")
                        .HasColumnType("bigint")
                        .HasColumnName("owner_id");

                    b.Property<string>("ProjectPicture")
                        .HasColumnType("text")
                        .HasColumnName("project_picture");

                    b.Property<DateTime?>("TTL")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ttl");

                    b.HasKey("Id")
                        .HasName("pk_projects");

                    b.HasIndex("TTL", "OwnerId", "Name")
                        .HasDatabaseName("ix_projects_ttl_owner_id_name");

                    b.ToTable("projects", (string)null);
                });

            modelBuilder.Entity("Pamaxie.Database.Native.Sql.ProjectUser", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<int>("Permissions")
                        .HasColumnType("integer")
                        .HasColumnName("permissions");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint")
                        .HasColumnName("project_id");

                    b.Property<DateTime?>("TTL")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ttl");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_project_users");

                    b.HasIndex("UserId", "ProjectId")
                        .HasDatabaseName("ix_project_users_user_id_project_id");

                    b.ToTable("project_users", (string)null);
                });

            modelBuilder.Entity("Pamaxie.Database.Native.Sql.User", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creation_date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<long>("Flags")
                        .HasColumnType("bigint")
                        .HasColumnName("flags");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password_hash");

                    b.Property<string>("ProfilePictureUrl")
                        .HasColumnType("text")
                        .HasColumnName("profile_picture_url");

                    b.Property<DateTime?>("TTL")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ttl");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("TTL", "Username", "Email")
                        .HasDatabaseName("ix_users_ttl_username_email");

                    b.ToTable("users", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
